
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <style>
        /* Önceki ve sonraki ay geçiş düğmeleri için stiller */
        .arrow-button {
            background-color: #f9f9f9;
            border: 1px solid #ccc;
            border-radius: 50%;
            padding: 5px 10px;
            margin: 5px;
            cursor: pointer;
            font-size: 20px;
        }

        /* Takvim ve kaydırıcı için stiller */
        .datepicker {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-top: 50px;
        }

        .calendar-container {
            display: flex;
        }

        .calendar-wrapper {
            flex-grow: 1;
            overflow: hidden;
            position: relative;
        }

        table {
            width: 100%;
        }

        table, th, td {
            border: 1px solid #ccc;
            border-collapse: collapse;
        }

        th, td {
            padding: 10px;
            text-align: center;
        }

        .date-button {
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
            border: 1px solid #ccc;
            background-color: #f9f9f9;
            border-radius: 5px;
            margin: 5px;
        }

            .date-button:hover {
                background-color: #e0e0e0;
            }
    </style>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tarih Seçiniz</title>
  
</head>
<body>
    <div class="datepicker">
        <div class="calendar-container">
            <div class="calendar-wrapper">
                <table>

                    <tbody id="calendar-body">
                        <!-- Butonlar buraya dinamik olarak eklenir -->
                    </tbody>
                </table>
            </div>
        </div>
        <div class="calendar-controls">
            <button class="arrow-button" id="prev-month">&#10094;</button>
            <span id="current-month"></span>
            <button class="arrow-button" id="next-month">&#10095;</button>
        </div>
    </div>

</body>
</html>

<script>
    const calendarBody = document.getElementById("calendar-body");
    const prevMonthButton = document.getElementById("prev-month");
    const nextMonthButton = document.getElementById("next-month");
    const currentMonthSpan = document.getElementById("current-month");

    let currentDate = new Date();

    function selectDate(selectedDate) {
        // Seçilen tarihe ait verilere yönlendirme işlemini burada gerçekleştirin.
        // Örneğin, window.location.href ile ilgili sayfaya yönlendirebilirsiniz.
        // Örnek: window.location.href = "/veriler?date=" + selectedDate;
    }

    function createCalendar() {
        calendarBody.innerHTML = "";

        const startDate = new Date(currentDate);
        startDate.setDate(1); // Ayın başlangıç günü
        startDate.setHours(0, 0, 0, 0); // Saat, dakika, saniye ve milisaniye sıfırlama

        // Pazartesi gününden başlayarak 6 haftalık bir takvim oluşturun
        for (let week = 0; week < 5; week++) {
            const row = document.createElement("tr");

            for (let day = 0; day < 7; day++) {
                const cell = document.createElement("td");
                const button = document.createElement("button");
                const currentDate = new Date(startDate);
                currentDate.setDate(startDate.getDate() + (week * 7) + day);
                const options = { weekday: 'short', day: 'numeric' };
                const formattedDate = currentDate.toLocaleDateString('tr-TR', options);

                button.textContent = formattedDate;
                button.className = "date-button";

                // Eğer tarih, seçilen ayın günlerine ait değilse gri yap
                if (currentDate.getMonth() !== currentDate.getMonth()) {
                    button.classList.add("disabled-date");
                }

                button.addEventListener("click", () => {
                    // currentDate'i bir kopyasını alarak üzerinde değişiklik yapmak daha güvenlidir
                    const nextDay = new Date(currentDate);

                    // currentDate'e 1 gün ekleyin
                    nextDay.setDate(nextDay.getDate() + 1);

                    // Seçilen tarihi selectDate fonksiyonuna gönderin
                    selectDate(nextDay.toISOString().split('T')[0]);
                });

                cell.appendChild(button);
                row.appendChild(cell);
            }

            calendarBody.appendChild(row);
        }

        // Ay ve yıl bilgisini güncelle
        const monthOptions = { month: 'long', year: 'numeric' };
        currentMonthSpan.textContent = currentDate.toLocaleDateString('tr-TR', monthOptions);
    }

    prevMonthButton.addEventListener("click", () => {
        currentDate.setMonth(currentDate.getMonth() - 1);
        createCalendar();
    });

    nextMonthButton.addEventListener("click", () => {
        currentDate.setMonth(currentDate.getMonth() + 1);
        createCalendar();
    });

    createCalendar();

</script>
<script>
    function selectDate(selectedDate) {
        // Seçilen tarihe ait verilere yönlendirme işlemini burada gerçekleştirin.
        // Örneğin, window.location.href ile ilgili sayfaya yönlendirebilirsiniz.
        // Örnek: window.location.href = "/En/Add?date=" + selectedDate;
        window.location.href = "/Pr/Add?date=" + selectedDate;
    }

</script>